<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProducts&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f7eb1a65172e2b72753fe3c77cd3ed5&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:33,&quot;second&quot;:34,&quot;nano&quot;:735455860}},&quot;historyId&quot;:&quot;c97f4f0f-176d-4577-9654-83bfaa521fa6&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProducts&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f7eb1a65172e2b72753fe3c77cd3ed5&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:18},&quot;time&quot;:{&quot;hour&quot;:11,&quot;minute&quot;:28,&quot;second&quot;:30,&quot;nano&quot;:217584159}},&quot;historyId&quot;:&quot;ec8f39e3-c68e-4730-8031-a327f74f9e1e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProducts&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f7eb1a65172e2b72753fe3c77cd3ed5&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:16,&quot;minute&quot;:6,&quot;second&quot;:5,&quot;nano&quot;:212885810}},&quot;historyId&quot;:&quot;4a36c164-1c2b-411b-8c3f-75840f8432bc&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/update&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;updateProduct&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9bab8b1607d18a3bbab5d948047edef4&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 3.0,\n  \&quot;name\&quot;: \&quot;\&quot;,\n  \&quot;description\&quot;: \&quot;douce saveur\&quot;,\n  \&quot;id\&quot;: 1\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:44,&quot;second&quot;:50,&quot;nano&quot;:29563395}},&quot;historyId&quot;:&quot;e58264b6-32c9-44ee-b290-7afdfbac008e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;addProduct&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;541f0d71beb3f48dcf1aaae6389f8bd7&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 35.0,\n  \&quot;name\&quot;: \&quot;Patate Douce\&quot;,\n  \&quot;description\&quot;: \&quot;Elle est giga bonne\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:51,&quot;nano&quot;:819786884}},&quot;historyId&quot;:&quot;a0b68dfc-a9a6-42b9-bb95-07442d78ad7e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;addProduct&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;541f0d71beb3f48dcf1aaae6389f8bd7&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 35.0,\n  \&quot;name\&quot;: \&quot;Patate Douce\&quot;,\n  \&quot;description\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:42,&quot;second&quot;:24,&quot;nano&quot;:670136090}},&quot;historyId&quot;:&quot;64c13862-36c8-4866-a5c8-5d79bfb2eda7&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;addProduct&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;541f0d71beb3f48dcf1aaae6389f8bd7&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 0.0,\n  \&quot;name\&quot;: \&quot;\&quot;,\n  \&quot;description\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:41,&quot;second&quot;:44,&quot;nano&quot;:238214379}},&quot;historyId&quot;:&quot;2998b21a-6a58-4ec7-a7e3-6a7cfcf940ef&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;addProduct&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;541f0d71beb3f48dcf1aaae6389f8bd7&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 0.0,\n  \&quot;name\&quot;: \&quot;\&quot;,\n  \&quot;description\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:39,&quot;second&quot;:26,&quot;nano&quot;:749662280}},&quot;historyId&quot;:&quot;bbe5eb73-2d81-4816-9755-bb873a43d65e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;addProduct&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;541f0d71beb3f48dcf1aaae6389f8bd7&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 0.0,\n  \&quot;name\&quot;: \&quot;\&quot;,\n  \&quot;description\&quot;: \&quot;\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:39,&quot;second&quot;:16,&quot;nano&quot;:968289444}},&quot;historyId&quot;:&quot;663e6db0-9db3-4612-b7f5-4cb4ab16e0ea&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProducts&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f7eb1a65172e2b72753fe3c77cd3ed5&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:20,&quot;second&quot;:7,&quot;nano&quot;:874441110}},&quot;historyId&quot;:&quot;d9c03575-1a18-4272-8ca1-bc837cecd47e&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/{id}&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProduct&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;650b79cfe9a81690400c3976da3cf9bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;1&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:18,&quot;second&quot;:23,&quot;nano&quot;:409636767}},&quot;historyId&quot;:&quot;9eccd1df-74e1-4f07-aa00-90cf4e656616&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/{id}&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProduct&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;650b79cfe9a81690400c3976da3cf9bc&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:18,&quot;second&quot;:18,&quot;nano&quot;:38589827}},&quot;historyId&quot;:&quot;4d058d71-418f-459c-b256-c2acc1347b3d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/delete/{id}&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;deleteProuct&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;e9d41c67954e2540c3c57edea78f5f9b&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/delete/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:10,&quot;second&quot;:23,&quot;nano&quot;:497606759}},&quot;historyId&quot;:&quot;8e78fad3-47b4-4fff-8395-8f7061077148&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/delete/{id}&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;deleteProuct&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;e9d41c67954e2540c3c57edea78f5f9b&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/delete/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:10,&quot;second&quot;:11,&quot;nano&quot;:176323880}},&quot;historyId&quot;:&quot;3e37119d-d53d-4d4f-8657-162ff9371f17&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/delete/{id}&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;deleteProuct&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;e9d41c67954e2540c3c57edea78f5f9b&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/delete/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:8,&quot;second&quot;:35,&quot;nano&quot;:41335104}},&quot;historyId&quot;:&quot;fa85e844-d6ac-41e1-a272-1a098133b088&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/delete/{id}&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;deleteProuct&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;e9d41c67954e2540c3c57edea78f5f9b&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/delete/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;DELETE&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;value&quot;:&quot;3&quot;,&quot;valueType&quot;:&quot;string&quot;,&quot;describe&quot;:&quot;&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:13,&quot;minute&quot;:3,&quot;second&quot;:38,&quot;nano&quot;:9943208}},&quot;historyId&quot;:&quot;a66cf3e0-e9fc-444d-9583-eead5d2da885&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;addProduct&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;541f0d71beb3f48dcf1aaae6389f8bd7&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 50.0,\n  \&quot;name\&quot;: \&quot;{{RandomName}}\&quot;,\n  \&quot;description\&quot;: \&quot;Desc\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:59,&quot;second&quot;:16,&quot;nano&quot;:741250059}},&quot;historyId&quot;:&quot;0e9afb92-6afb-48ef-8ba3-fd132c52d3ea&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;addProduct&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;541f0d71beb3f48dcf1aaae6389f8bd7&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 50.0,\n  \&quot;name\&quot;: \&quot;${RandomName}\&quot;,\n  \&quot;description\&quot;: \&quot;Desc\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:57,&quot;second&quot;:42,&quot;nano&quot;:857165513}},&quot;historyId&quot;:&quot;00392361-87c5-4ec3-ba7d-6eb59f31365d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;addProduct&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;541f0d71beb3f48dcf1aaae6389f8bd7&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 50.0,\n  \&quot;name\&quot;: \&quot;{$RandomName}\&quot;,\n  \&quot;description\&quot;: \&quot;Desc\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:55,&quot;second&quot;:12,&quot;nano&quot;:544762001}},&quot;historyId&quot;:&quot;f5cc45cf-edfb-4d3d-be02-f20133b90bde&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/update&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;updateProduct&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9bab8b1607d18a3bbab5d948047edef4&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 3.0,\n  \&quot;name\&quot;: \&quot;Mangue\&quot;,\n  \&quot;description\&quot;: \&quot;douce saveur\&quot;,\n  \&quot;id\&quot;: 1\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:53,&quot;second&quot;:55,&quot;nano&quot;:73143283}},&quot;historyId&quot;:&quot;fe477061-a047-40c4-ab65-de1acd874550&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products/update&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;updateProduct&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;9bab8b1607d18a3bbab5d948047edef4&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products/update&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 3.0,\n  \&quot;name\&quot;: \&quot;Mangue\&quot;,\n  \&quot;description\&quot;: \&quot;douce saveur\&quot;,\n  \&quot;id\&quot;: 1\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:53,&quot;second&quot;:4,&quot;nano&quot;:636431852}},&quot;historyId&quot;:&quot;7961771e-792a-44ef-a111-578643795daa&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProducts&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f7eb1a65172e2b72753fe3c77cd3ed5&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:41,&quot;second&quot;:11,&quot;nano&quot;:627344978}},&quot;historyId&quot;:&quot;bb809eef-44e5-405e-9f38-defbb5671385&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProducts&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f7eb1a65172e2b72753fe3c77cd3ed5&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:41,&quot;second&quot;:6,&quot;nano&quot;:689252665}},&quot;historyId&quot;:&quot;c92706cf-8a57-4859-8329-2fd82f43eeb3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/products&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;getProducts&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;8f7eb1a65172e2b72753fe3c77cd3ed5&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/products&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:40,&quot;second&quot;:47,&quot;nano&quot;:557272789}},&quot;historyId&quot;:&quot;272ea654-c57d-4ca5-b203-a8e7270695b1&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/product&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.ProductController&quot;,&quot;methodName&quot;:&quot;add&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;0f186951d9c9b39c8de8c37491934d9b&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/product&quot;,&quot;requestBody&quot;:&quot;{\n  \&quot;price\&quot;: 3.0,\n  \&quot;name\&quot;: \&quot;Evian\&quot;,\n  \&quot;description\&quot;: \&quot;L\u0027eau mineale\&quot;\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;PUT&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:39,&quot;second&quot;:1,&quot;nano&quot;:699668640}},&quot;historyId&quot;:&quot;37014524-7bbe-433d-8e3d-b76b724c80db&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;70dacbd284021acb2e8a81ae0e42b6e3&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:28,&quot;second&quot;:37,&quot;nano&quot;:815565117}},&quot;historyId&quot;:&quot;903ee640-32be-42d8-a36e-d0b177f4bd4c&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai/autre&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;essai&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b2963efe91f663657ce89d5e1393f421&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai/autre&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:28,&quot;second&quot;:31,&quot;nano&quot;:916763082}},&quot;historyId&quot;:&quot;880f8c98-631c-46d9-95c8-e9fabb2cada3&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai/autre&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;essai&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b2963efe91f663657ce89d5e1393f421&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai/autre&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:12,&quot;minute&quot;:28,&quot;second&quot;:30,&quot;nano&quot;:284455583}},&quot;historyId&quot;:&quot;b4a7b382-575c-4ad1-9653-c195cacff1f5&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai/autre&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;essai&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;b2963efe91f663657ce89d5e1393f421&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai/autre&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:6,&quot;second&quot;:16,&quot;nano&quot;:787656245}},&quot;historyId&quot;:&quot;c1038386-153d-4109-992e-a15795480540&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;70dacbd284021acb2e8a81ae0e42b6e3&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:9,&quot;minute&quot;:3,&quot;second&quot;:33,&quot;nano&quot;:634837239}},&quot;historyId&quot;:&quot;05b85136-ade7-4434-8124-8f178ece6efe&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;70dacbd284021acb2e8a81ae0e42b6e3&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:8,&quot;minute&quot;:54,&quot;second&quot;:5,&quot;nano&quot;:570475713}},&quot;historyId&quot;:&quot;d6d8bcc2-17ea-4720-8ac9-a6aa061d180b&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;70dacbd284021acb2e8a81ae0e42b6e3&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:8,&quot;minute&quot;:53,&quot;second&quot;:59,&quot;nano&quot;:544474764}},&quot;historyId&quot;:&quot;27f5b024-4c21-4133-9dc3-4a70961ca49f&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;70dacbd284021acb2e8a81ae0e42b6e3&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:8,&quot;minute&quot;:52,&quot;second&quot;:25,&quot;nano&quot;:917758713}},&quot;historyId&quot;:&quot;8c8ecb0e-5ba2-43db-b284-69acd5b81b77&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;70dacbd284021acb2e8a81ae0e42b6e3&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/essai&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:8,&quot;minute&quot;:50,&quot;second&quot;:35,&quot;nano&quot;:639215428}},&quot;historyId&quot;:&quot;8fa4a265-eab6-476a-9070-9eb9cd80ac3a&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;70dacbd284021acb2e8a81ae0e42b6e3&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:8,&quot;minute&quot;:48,&quot;second&quot;:48,&quot;nano&quot;:860814648}},&quot;historyId&quot;:&quot;d79fa160-2e84-451f-9f2a-d894195f082d&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false},{&quot;originController&quot;:{&quot;moduleName&quot;:&quot;spring&quot;,&quot;contextPath&quot;:&quot;/&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/essai&quot;,&quot;simpleClassName&quot;:&quot;com.mamoudou.spring.controller.EssaiController&quot;,&quot;methodName&quot;:&quot;hello&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;methodName&quot;:&quot;&quot;,&quot;className&quot;:&quot;&quot;},&quot;host&quot;:&quot;http://localhost&quot;,&quot;id&quot;:&quot;70dacbd284021acb2e8a81ae0e42b6e3&quot;,&quot;available&quot;:false},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/essai&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log \u003d log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object \u003d\u003d null) return;\r\n        if (log \u003d\u003d null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;localDateTime&quot;:{&quot;date&quot;:{&quot;year&quot;:2024,&quot;month&quot;:10,&quot;day&quot;:16},&quot;time&quot;:{&quot;hour&quot;:8,&quot;minute&quot;:43,&quot;second&quot;:5,&quot;nano&quot;:946779471}},&quot;historyId&quot;:&quot;93f929c8-ff13-409c-aca9-eac5f1c36551&quot;,&quot;serverPort&quot;:0,&quot;available&quot;:false}]" />
  </component>
</project>